<launch>

  <node pkg="giskardpy" type="joint_trajectory_splitter.py" name="joint_trajectory_splitter" output="screen">
    <rosparam param="enable_self_collision">False</rosparam>
    <rosparam param="state_topics">
      - /whole_body_controller/base/state
      - /whole_body_controller/torso/state
      - /scaled_pos_traj_controller/state
      - /whole_body_controller/left_arm/state
      - /whole_body_controller/right_arm/state
    </rosparam>
    <rosparam param="client_topics">
      - /whole_body_controller/base/follow_joint_trajectory
      - /whole_body_controller/torso/follow_joint_trajectory
      - /scaled_pos_traj_controller/follow_joint_trajectory
      - /whole_body_controller/left_arm/follow_joint_trajectory
      - /whole_body_controller/right_arm/follow_joint_trajectory
    </rosparam>
  </node>

  <node pkg="giskardpy" type="giskard_robot_config.py" name="giskard_robot_config_uploader" output="screen">
    <param name="config" value="$(find giskardpy)/config/boxy.yaml" />
  </node>

  <node pkg="giskardpy" type="giskard_trees.py" name="giskard" output="screen" />

  <node pkg="giskardpy" type="interactive_marker.py" name="giskard_interactive_marker" output="screen">
    <rosparam param="interactive_marker_chains">
      - [odom, base_footprint]
      - [base_footprint, triangle_base_link]
      - [odom, neck_ee_link]
      - [base_footprint, left_gripper_tool_frame]
      - [base_footprint, right_gripper_tool_frame]
    </rosparam>
  </node>

</launch>
