parent: !include default.yaml
general_options:
  path_to_data_folder: !find data # or 'find ros://giskardpy/data'
  enable_gui: False
  sample_period: 0.05 # time[s] between points of generated joint trajectory
  map_frame: map
  test_mode: False
  debug: False # enables debug prints and prints the behavior tree state in the terminal
  fill_velocity_values: True # due to a bug, the pr2 does not want the velocity values to be filled
  joint_weights:
    # the planner prefers low weight joints to achieve solutions
    # higher weights reduce wiggling, but lower the maximum joint velocity, which might make the planner stop too early
    velocity:
      default: 0.001
      override: {}
    acceleration:
      default: 0
      override: {}
    jerk:
      default: 0.001
      override: {}
  joint_limits: # giskard will use the min of this number and limits from the urdf
    velocity:
      linear: # m/s
        default: 0.5
        override:
          odom_x_joint: 0.1
          odom_y_joint: 0.1
      angular: # rad/s
        default: 0.5
        override:
          odom_z_joint: 0.05
    acceleration:
      linear: # m/s**2
        default: 1e3
        override: {}
      angular: # rad/s**2
        default: 1e3
        override: {}
    jerk:
      linear: # m/s**3
        default: 15
        override: {}
      angular: # rad/s**3
        default: 15
        override: {}
collision_avoidance:
  external_collision_avoidance:
    override:
      odom_z_joint: # this affects all links between this and the next controlled joint
        hard_threshold: 0.05 # at this distance in [cm] that can not be surpassed
        soft_threshold: 0.1 # robot links are pushed to that distance, but it can be overpowered with high weight constraints
  self_collision_avoidance:
    override:
      low: &low
        hard_threshold: 0.005
        soft_threshold: 0.02
      low2: &low2
        hard_threshold: 0.0
        soft_threshold: 0.00001
      ur5_wrist_1_link: *low
      ur5_wrist_2_link: *low
      ur5_wrist_3_link: *low
      ur5_forearm_link: *low
      ur5_upper_arm_link: *low
      gripper_gripper_left_link: *low2
      gripper_gripper_right_link: *low2
      refills_finger, refills_tool_frame: *low2
    ignore: # list pairs of links that should be removed from the self collision avoidance
#    ignore: #example
#      - [base_link, l_upper_arm_link]
      - [ur5_forearm_link, ur5_wrist_3_link]
      - [ur5_base_link, ur5_upper_arm_link]
    add: # list pairs of links that should be added to the self collision matrix
      - [plate, ur5_upper_arm_link]
robot_interface:
  base:
    plugin: SendFollowJointTrajectory
    namespace: /whole_body_controller/base/follow_joint_trajectory
    state_topic: /whole_body_controller/base/state
  body:
    plugin: SendFollowJointTrajectory
    namespace: /whole_body_controller/body/follow_joint_trajectory
    state_topic: /whole_body_controller/body/state