<launch>

  <param name="giskard/robot_description" command="$(find xacro)/xacro '$(find iai_pr2_description)/robots/pr2_with_odom_joints.xacro'" />

  <node pkg="giskardpy" type="base_joint_state_publisher.py" name="base_joint_state_publisher" output="screen"/>

  <node pkg="topic_tools" name="remap_joint_states" type="relay" args="joint_states body/joint_states"/>

  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" output="screen">
    <rosparam param="source_list">
    - base/joint_states
    - body/joint_states
    </rosparam>
    <rosparam param="zeros">
    'odom_x_joint': 0.0
    'odom_y_joint': 0.0
    'odom_z_joint': 0.0
    </rosparam>
    <param name="rate" value="120"/>
    <param name="use_gui" value="False"/>
    <remap from="joint_states" to="giskard/joint_states"/>
    <remap from="robot_description" to="giskard/robot_description"/>
  </node>

  <include file="$(find omni_pose_follower)/launch/omni_pose_follower_pr2.launch"/>

  <node pkg="giskardpy" type="joint_trajectory_splitter.py" name="joint_trajectory_splitter" output="screen">
    <rosparam param="state_topics">
      - /whole_body_controller/base/state 
      - /whole_body_controller/body/state
      - /head_traj_controller/state
    </rosparam>
    <rosparam param="client_topics">
      - /whole_body_controller/base/follow_joint_trajectory
      - /whole_body_controller/body/follow_joint_trajectory
      - /head_traj_controller/joint_trajectory_action
    </rosparam>
  </node>

  <node pkg="giskardpy" type="giskard_robot_config.py" name="giskard_robot_config_uploader" output="screen">
     <param name="config" value="$(find giskardpy)/config/pr2.yaml" />
  </node>

  <node pkg="giskardpy" type="giskard_trees.py" name="giskard" output="screen">
    <remap from="/joint_states" to="/giskard/joint_states"/>
    <remap from="robot_description" to="giskard/robot_description"/>
    <!-- <remap from="/whole_body_controller/follow_joint_trajectory/" to="/whole_body_controller/follow_joint_trajectory/base/"/> -->
    <!-- <remap from="~state" to="/whole_body_controller/base/state"/> -->
  </node>

  <node pkg="giskardpy" type="interactive_marker.py" name="giskard_interactive_marker" output="screen">
    <rosparam param="enable_self_collision">False</rosparam>
    <rosparam param="interactive_marker_chains">
      - [odom_combined, r_gripper_tool_frame]
      - [base_footprint, l_gripper_tool_frame]
      - [odom_combined, base_footprint]
      - [odom_combined, head_mount_kinect2_rgb_optical_frame]
    </rosparam>
  </node>

</launch>
