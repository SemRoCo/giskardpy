general_options:
  sample_period: 0.05 # time[s] between points of generated joint trajectory
  debug: False # 
  map_frame: map
  fill_velocity_values: True # due to a bug, the pr2 does not want the velocity values to be filled
  joint_convergence_threshold: 0.01 # when the velocities fall below this value, the planning succeeds
  joint_vel_limit: # giskard will use the min of this number and limits from the urdf
    linear:
      default: 1
      odom_x_joint: 0.5
      odom_y_joint: 0.5
    angular:
      default: 1
      odom_z_joint: 0.6
  joint_acceleration_limit: # multiply your desired acc limit with sample period; experimental, don't touch
    linear:
      default: 100
    angular:
      default: 100
  joint_weights: # the planner prefers low weight joints to achieve solutions
    default: 0.0001
qp_solver:
  nWSR: None # None results in a nWSR estimation thats fine most of the time
plugins:
  VisualizationBehavior: # planning visualization through markers, slows planning down a little bit
    enabled: True
  CPIMarker: # contact visualization, slows planning down a little bit
    enabled: True
  PlotTrajectory: # plots the joint trajectory at the end of planning
    enabled: True
  WiggleCancel: # cancels planning if high frequencies are detected in the trajectory
    wiggle_detection_threshold: 10
    num_samples_in_fft: 50 # the number of most recent sample points taken into account for the fft. Lower numbers are faster at detecting wiggling but also more prone to missdetections.
behavior_tree:
  tree_tick_rate: 0.1 # how often the tree updates. lower numbers increase responsiveness, but waste cpu time while idle
collision_avoidance:
  distance_thresholds:
    default:
      max_weight_distance: 0.0
      low_weight_distance: 0.01
      zero_weight_distance: 0.05
  self_collision_avoidance:
    ignore: []
    add: []
  external_collision_avoidance:
    number_of_repeller: 5
