name: CI standalone
defaults:
  run:
    shell: bash -ieo pipefail {0}
on:
  push:
    branches:
      - ros1-noetic-main
  pull_request:
#    branches:
#      - master
#      - devel
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      is_trigger:
        description: 'Is trigger from giskardpy'
        required: false
        type: boolean
        default: false
      pr_id:
        description: 'ID of PR from giskardpy'
        required: false
        type: string
        default: ""
jobs:
  hsr:
    uses: ./.github/workflows/reusable_robot_ci.yml
    with:
      robot: hsr
      test1: test_integration_hsr.py::TestJointGoals
      test2: test_integration_hsr.py::TestCollisionAvoidanceGoals
      test3: test_integration_hsr.py::TestConstraints
      is_trigger: ${{ inputs.is_trigger }}
      pr_id: ${{ inputs.pr_id }}
  donbot:
    uses: ./.github/workflows/reusable_robot_ci.yml
    with:
      robot: donbot
      test1: test_integration_donbot.py::TestCartGoals
      test2: test_integration_donbot.py::TestConstraints
      test3: test_integration_donbot.py::TestJointGoals
      is_trigger: ${{ inputs.is_trigger }}
      pr_id: ${{ inputs.pr_id }}
  pr2_part1:
    uses: ./.github/workflows/reusable_robot_ci.yml
    with:
      robot: pr2
      test1: test_integration_pr2.py::TestConstraints
      test2: test_integration_pr2.py::TestCartGoals
      test3: test_integration_pr2.py::TestManipulability::test_manip1
      test4: test_integration_pr2.py::TestWeightScaling
      test5: test_integration_pr2.py::TestFeatureFunctions
      test6: test_integration_pr2.py::TestEndMotionReason
      is_trigger: ${{ inputs.is_trigger }}
      pr_id: ${{ inputs.pr_id }}
  pr2_part2:
    uses: ./.github/workflows/reusable_robot_ci.yml
    with:
      robot: pr2
      test1: test_integration_pr2.py::TestCollisionAvoidanceGoals
      test2: test_integration_pr2.py::TestWorldManipulation
      test3: test_integration_pr2.py::TestSelfCollisionAvoidance
      test4: test_integration_pr2.py::TestInfoServices
      test5: test_integration_pr2.py::TestJointGoals
      test6: test_integration_pr2.py::TestMonitors
      is_trigger: ${{ inputs.is_trigger }}
      pr_id: ${{ inputs.pr_id }}
  tiago:
    uses: ./.github/workflows/reusable_robot_ci.yml
    with:
      robot: tiago
      test1: test_integration_tiago_stand_alone.py::TestConstraints
      test2: test_integration_tiago_stand_alone.py::TestJointGoals
      test3: test_integration_tiago_stand_alone.py::TestCollisionAvoidance
      test4: test_integration_tiago_stand_alone.py::TestCartGoals
      is_trigger: ${{ inputs.is_trigger }}
      pr_id: ${{ inputs.pr_id }}
