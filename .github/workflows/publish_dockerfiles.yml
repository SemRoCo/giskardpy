name: Publish Custom Docker image

on:
  workflow_dispatch:
  push:
    paths:
      - '**/Dockerfile'


jobs:
  build_and_push_to_registry:
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest

    # Allows pushing of Container to package
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ghcr.io link needs to be lowercase, as such the following echo to $GITHUB_ENV
      - name: create Image Name
        run: |
          echo "IMAGE_NAME=ghcr.io/${OWNER,,}/$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_ENV
        env:
          OWNER: '${{ github.repository_owner }}'

      # Setup Download-URL for requirements.txt for python dependencies
      - name: Set Download URL
        run: | 
          echo "DOWNLOAD_URL=https://raw.githubusercontent.com/${{ github.repository }}/${{ github.ref_name }}/requirements.txt" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Builds docker images and uploads them to the GitHub Container Registry
      - name: Find Dockerfiles and Build Images
        run: |
          for dockerfilepath in $(find . -name 'Dockerfile' | rev | cut -d'/' -f2- | rev); do
            UBUNTU_VERSION=$(grep -oP '(?<=FROM ubuntu:)[0-9]+(\.[0-9]+)?' "$dockerfilepath"/Dockerfile)

            if [ -z "$UBUNTU_VERSION" ]; then
              echo "No Ubuntu version found in $dockerfile, skipping..."
              continue
            fi
            
            docker buildx build \
              --platform linux/amd64 \
              --build-arg DOWNLOAD_URL=${DOWNLOAD_URL} \
              -t ${IMAGE_NAME}:${UBUNTU_VERSION} \
              --push \
              $dockerfilepath
          done